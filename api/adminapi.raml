#%RAML 1.0
title: Nubo Admin
version: v1
baseUri: https://api.nubosoftware.com/api/
/auth:
  post:
    description: |
        Log in to the admin API.<br>
        After successful login, use the "loginToken" return value to authenticate
        the resources, using the "Authorization" http header with "OAuth" authentication type.<br>
        e.g. Authorization: OAuth 474dff215b73e8fdedaee76bc896655830d592c25a3fda259fe9ddbc58c6985d835d71d428e54c48f30a6454f34a032c
    queryParameters:
      userName:
          description: "User name (Email)"
          required: true
          type: string
          example: "admin@mydomain.com"
      password:
          description: "Password"
          required: true
          type: string
          example: "********"
    responses:
      200:
        body:
          application/json:
              example: |
                {
                  "status": 1,
                  "message": "Login was successful",
                  "loginToken": "474dff215b73e8fdedaee76bc896655830d592c25a3fda259fe9ddbc58c6985d835d71d428e54c48f30a6454f34a032c",
                  "mainDomain": "mydomain.com",
                  "firstname": "John",
                  "lastname": "Doe",
                  "orgname": "My Company Inc."
                }
/profiles:
    get:
        description: Get list of profiles (users).
        queryParameters:
            adminFilter:
              description: |
                Return only administrators (Y) or non-administrators (N).
                Keep this parameter empty to get both admins and non-admins.
              required: false
              type: string
              example: "Y"
            online:
                description: "Display only online users (Y/N)"
                required: false
                type: string
                example: "Y"
            limit:
                description: "Maximum number of rows to fetch"
                required: false
                type: number
                example: 1000
            offset:
                description: "Rows to skip"
                required: false
                type: number
                example: 0
            sortBy:
                description: "Sort by fields"
                required: false
                type: string
                example: "firstname"
            sortDesc:
                description: "Boolean array indicates if each sorted field is descending"
                required: false
                type: string
                example: "true"
            search:
                description: "Filter results by using this search string"
                required: false
                type: string
                example: "John"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                            "status": "1",
                            "message": "Request was fulfilled",
                            "myUser": "admin@mydomain.com",
                            "profiles": [
                                {
                                    "id": 1,
                                    "email": "main1@nub4est.co",
                                    "userName": "main1@nub4est.co",
                                    "firstName": "main1",
                                    "lastName": "",
                                    "isActive": 1,
                                    "imageUrl": "",
                                    "isOnline": 0,
                                    "deviceType1": "",
                                    "deviceType2": "",
                                    "isAdmin": 0
                                },
                                {
                                    "id": 2,
                                    "email": "subuser1@subdc1.nub4est.co",
                                    "userName": "subuser1@subdc1.nub4est.co",
                                    "firstName": "subuser1",
                                    "lastName": "",
                                    "isActive": 1,
                                    "imageUrl": "",
                                    "isOnline": 0,
                                    "deviceType1": "",
                                    "deviceType2": "",
                                    "isAdmin": 1
                                }
                            ],
                            "totalItems": 2,
                            "isMore":false
                            }
    /{email}:
        get:
            description: | 
              Get profile information. <br>
              Return user details as well as list of user's apps, devices, and groups.
            responses:
                200:
                    body:
                        application/json:
                            example: |
                              {
                                "status": "1",
                                "message": "Request was fulfilled",
                                "details": {
                                  "emailAddress": "1234@nub4est.co",
                                  "userName": "1234@nub4est.co",
                                  "isActive": 1,
                                  "officePhone": "12344567",
                                  "mobilePhone": "87643434",
                                  "manager": "Jim",
                                  "country": "UK",
                                  "isImAdmin": 0,
                                  "dataCenter": "",
                                  "imMobile": "",
                                  "imMobile2": "",
                                  "adDomain": "",
                                  "clientIp": "",
                                  "clientPort": "",
                                  "subscriptionId": "",
                                  "subscriptionUpdateDate": "",
                                  "Calendar": 1,
                                  "Email": 1,
                                  "Messaging": 1,
                                  "userCert": 0,
                                  "lastActivityTime": "",
                                  "firstname": "John",
                                  "lastname": "Smith",
                                  "storageUsage": "0.00%"
                                },
                                "apps": [
                                  {
                                    "appName": "Calendar",
                                    "packageName": "com.android.calendar",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.android.calendar.100.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Camera",
                                    "packageName": "com.android.camera",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.android.camera.3.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Contacts",
                                    "packageName": "com.android.contacts",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.android.contacts.100001.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Phone",
                                    "packageName": "com.android.dialer",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.android.dialer.30000.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Email",
                                    "packageName": "com.android.email",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.android.email.550007.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Store",
                                    "packageName": "com.nubo.appstore",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.appstore.1008002.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Files",
                                    "packageName": "com.nubo.filemanager",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.filemanager.48.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Gallery",
                                    "packageName": "com.nubo.gallery",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.gallery.37.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Launcher",
                                    "packageName": "com.nubo.launcher.nubo",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.launcher.nubo.30912.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Notes",
                                    "packageName": "com.nubo.notes",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.notes.13.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Voice Call",
                                    "packageName": "com.nubo.sip",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/com.nubo.sip.13.png",
                                    "price": "0",
                                    "privateApp": 0
                                  },
                                  {
                                    "appName": "Messages",
                                    "packageName": "org.pf.messages",
                                    "imageUrl": "https://api.nubosoftware.com/appstore/domain.com/repo/icons/org.pf.messages.79.png",
                                    "price": "0",
                                    "privateApp": 0
                                  }
                                ],
                                "devices": [
                                  {
                                    "deviceName": "Samsung_SM-G973F",
                                    "isActive": 1,
                                    "gateway": "",
                                    "platform": "",
                                    "IMEI": "dd98df4eeaeecb3a",
                                    "IMSI": "",
                                    "insertTime": "2020-06-11T12:11:58.000Z",
                                    "isCertExists": 0,
                                    "isOnline": 0
                                  },
                                  {
                                    "deviceName": "iPhoneX",
                                    "isActive": 1,
                                    "gateway": "",
                                    "platform": "",
                                    "IMEI": "04960B8D-2093-415B-B710-FDF548D79322",
                                    "IMSI": "",
                                    "insertTime": "2020-05-25T10:54:50.000Z",
                                    "isCertExists": 0,
                                    "isOnline": 0
                                  }
                                ],
                                "groups": [
                                  {
                                    "groupName": "All",
                                    "adDomain": ""
                                  }
                                ]
                              }
        post:
            description: Update profile information
            queryParameters:
                first:
                    description: "First name"
                    required: true
                    type: string
                    example: "John"
                last:
                    description: "Last name"
                    required: true
                    type: string
                    example: "Smith"
                manager:
                    description: "Manager's name"
                    required: false
                    type: string
                    example: "Bill Gates"
                country:
                    description: "Country"
                    required: false
                    type: string
                    example: "United Kingdom"
                officePhone:
                    description: "Office number"
                    required: false
                    type: string
                    example: "212-456-9876"
                mobilePhone:
                    description: "Mobile number"
                    required: false
                    type: string
                    example: "212-456-9876"
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": 1,
                              "message": "The profile was updated successfully"
                            }
        put:
            description: Add profile
            queryParameters:
                first:
                    description: "First name"
                    required: true
                    type: string
                    example: "John"
                last:
                    description: "Last name"
                    required: true
                    type: string
                    example: "Smith"
                manager:
                    description: "Manager's name"
                    required: false
                    type: string
                    example: "Bill Gates"
                country:
                    description: "Country"
                    required: false
                    type: string
                    example: "United Kingdom"
                officePhone:
                    description: "Office number"
                    required: false
                    type: string
                    example: "212-456-9876"
                mobilePhone:
                    description: "Mobile number"
                    required: false
                    type: string
                    example: "212-456-9876"
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": 1,
                              "message": "The profile was added successfully"
                            }
        delete:
            description: Delete profile
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": 1,
                              "message": "The profile was deleted successfully"
                            }
/groups:
    description: |
            Actions on specific group.<br>
            If group was imported from A.D, groupName parameter shoud be &lt;Group Name&gt;#&lt;A.D Domain&gt; <br>
            e.g. Administrators#nub4est.co
    get:
        description: Get list of groups.
        responses:
          200:
              body:
                  application/json:
                      example: |
                        {
                          "status": "1",
                          "message": "Request was fulfilled",
                          "groups": [
                            {
                              "groupName": "abcde",
                              "adDomain": "",
                              "profiles": [],
                              "apps": []
                            },
                            {
                              "groupName": "All",
                              "adDomain": "",
                              "profiles": [],
                              "apps": []
                            },
                            {
                              "groupName": "gggg",
                              "adDomain": "",
                              "profiles": [],
                              "apps": []
                            },
                            {
                              "groupName": "Account Operators",
                              "adDomain": "nub4est.co",
                              "profiles": [],
                              "apps": []
                            },
                            {
                              "groupName": "Administrators",
                              "adDomain": "nub4est.co",
                              "profiles": [],
                              "apps": []
                            }
                          ]
                        }
    /{groupName}:
        get:
            description: |
              Get group information.<br>
              If group was imported from A.D, groupName parameter shoud be &lt;Group Name&gt;#&lt;A.D Domain&gt; <br>
              e.g. Administrators#domain.com
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": "1",
                              "message": "Request was fulfilled",
                              "groupName": "abcde",
                              "profiles": [
                                {
                                  "email": "administrator@nub4est.co",
                                  "firstName": "admin",
                                  "lastName": "nub4est",
                                  "isActive": 1,
                                  "imageUrl": ""
                                },
                                {
                                  "email": "administrator@subdc1.nub4est.co",
                                  "firstName": "admin",
                                  "lastName": "subdc1",
                                  "isActive": 1,
                                  "imageUrl": ""
                                }
                              ],
                              "apps": []
                            }
        delete:
            description: Delete group
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": "1",
                              "message": "The group was deleted successfully"
                            }
        put:
            description: Create new group
            queryParameters:
                email:
                    description: "Array of emails to be added to this group"
                    required: false
                    type: string
                    example: "user@domain.com"
            responses:
              200:
                  body:
                      application/json:
                          example: |
                            {
                              "status": "1",
                              "message": "The group was created successfully"
                            }
        /addProfiles:
            post:
                description: Add profiles to group
                queryParameters:
                    email:
                        description: "Array of emails to be added to this group"
                        required: false
                        type: string
                        example: "user@domain.com"
                responses:
                  200:
                      body:
                          application/json:
                              example: |
                                {
                                  "status": "1",
                                  "message": "The profiles were added to the group successfully"
                                }
        /removeProfiles:
            post:
                description: Remove profiles from group
                queryParameters:
                    email:
                        description: "Array of emails to be removed from this group"
                        required: false
                        type: string
                        example: "user@domain.com"
                responses:
                  200:
                      body:
                          application/json:
                              example: |
                                {
                                  "status": "1",
                                  "message": "The profiles were removed from the group successfully"
                                }
/ldap:
    get:
        description: Get list of LDAP domains and their details.
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "Request was fulfilled",
                    "ldapDomains": [
                      {
                        "domain": "mydomain.com",
                        "addomain": "domain.com",
                        "basedn": "DC=domain,DC=com",
                        "connectionurl": "ldap://8.8.8.8:389",
                        "password": "********",
                        "username": "administrator@domain.com"
                      }
                    ]
                  }
    /{ldapDomain}:
      get:
        description: Get list of OUs for the selected ldap domain.
        responses:
          200:
            body:
              application/json:
                example: | 
                  {
                    "status": "1",
                    "message": "Request was fulfilled",
                    "ousList": [
                      {
                        "ouName": "domain",
                        "level": 0,
                        "key": "DC=domain,DC=com",
                        "father": " ",
                        "checked": false,
                        "hasChild": true
                      },
                      {
                        "ouName": "Domain Controllers",
                        "level": 1,
                        "key": "OU=Domain Controllers,DC=domain,DC=com",
                        "father": "domain",
                        "checked": true,
                        "hasChild": false
                      },
                      {
                        "ouName": "Main OU",
                        "level": 1,
                        "key": "OU=Main OU,DC=domain,DC=com",
                        "father": "domain",
                        "checked": false,
                        "hasChild": true
                      },
                      {
                        "ouName": "Sales",
                        "level": 2,
                        "key": "OU=Sales,OU=Main OU,DC=domain,DC=com",
                        "father": "Main OU",
                        "checked": false,
                        "hasChild": true
                      },
                      {
                        "ouName": "R&D",
                        "level": 2,
                        "key": "OU=R&D,OU=Main OU,DC=domain,DC=com",
                        "father": "Main OU",
                        "checked": false,
                        "hasChild": true
                      },
                      {
                        "ouName": "Team 1",
                        "level": 3,
                        "key": "OU=Team 1,OU=R&D,OU=Main OU,DC=domain,DC=com",
                        "father": "R&D",
                        "checked": true,
                        "hasChild": false
                      },
                      {
                        "ouName": "Team 2",
                        "level": 3,
                        "key": "OU=Team 2,OU=R&D,OU=Main OU,DC=domain,DC=com",
                        "father": "R&D",
                        "checked": true,
                        "hasChild": false
                      },
                      {
                        "ouName": "Team 3",
                        "level": 3,
                        "key": "OU=Team 3,OU=R&D,OU=Main OU,DC=domain,DC=com",
                        "father": "R&D",
                        "checked": true,
                        "hasChild": false
                      },
                      {
                        "ouName": "Team 1 Sales",
                        "level": 3,
                        "key": "OU=Team 1 Sales,OU=Sales,OU=Main OU,DC=domain,DC=com",
                        "father": "Sales",
                        "checked": true,
                        "hasChild": false
                      }
                    ]
                  }
      post:
        description: Set list of synced OUs and start sync process.
        queryParameters:
          orgUnits:
              description: "List of OUs to sync"
              required: true
              type: string
              example: "OU=Team 1 Sales,OU=Sales,OU=Main OU,DC=domain,DC=com"
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "Starting LDAP sync"
                  }
      put:
        description: Set new LDAP domain or LDAP connection paramters for existing domain.
        queryParameters:
          host:
              description: "LDAP host name"
              required: true
              type: string
              example: "ad.mydomain.com"
          user:
              description: "Admin user name that can log in to the LDAP server and read information (read-only user)"
              required: true
              type: string
              example: "administrator@mydomain.com"
          password:
              description: "Password for the admin user"
              required: true
              type: string
              example: "*******"
          port:
              description: "Port number for the LDAP server"
              required: true
              type: number
              example: 389
          baseDN:
              description: "Base DN for the LDAP import"
              required: true
              type: string
              example: "DC=domain,DC=com"
          SSL:
              description: "Connection type (auto or ldap:// or ldaps://)"
              required: true
              type: string
              example: "auto"
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "LDAP domain was updated succesfully"
                  }
      delete:
        description: "Delete the LDAP domain"
        responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "The LDAP settings were deleted"
                  }
/admins:
  /{email}:
    put:
      description: Add new admin
      responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "The admin was added successfully"
                  }
    delete:
      description: Remove admin
      responses:
          200:
            body:
              application/json:
                example: |
                  {
                    "status": "1",
                    "message": "The admin was removed successfully"
                  }




